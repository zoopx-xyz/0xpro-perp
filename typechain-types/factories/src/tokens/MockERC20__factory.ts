/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockERC20,
  MockERC20Interface,
} from "../../../src/tokens/MockERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003885762000fa0803803806200001d816200038d565b9283398101606082820312620003885781516001600160401b03908181116200038857826200004e918501620003b3565b906020928385015182811162000388576040916200006e918701620003b3565b9401519360ff851685036200038857825182811162000288576003918254916001958684811c941680156200037d575b8885101462000367578190601f9485811162000311575b508890858311600114620002aa576000926200029e575b505060001982861b1c191690861b1783555b8051938411620002885760049586548681811c911680156200027d575b8282101462000268578381116200021d575b5080928511600114620001af5750938394918492600095620001a3575b50501b92600019911b1c19161790555b60055460405191336001600160a01b0383167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b03199091163360ff60a01b19161760a09190911b60ff60a01b1617600555610b7a9081620004268239f35b0151935038806200012a565b92919084601f1981168860005285600020956000905b89838310620002025750505010620001e7575b50505050811b0190556200013a565b01519060f884600019921b161c1916905538808080620001d8565b858701518955909701969485019488935090810190620001c5565b87600052816000208480880160051c8201928489106200025e575b0160051c019087905b828110620002515750506200010d565b6000815501879062000241565b9250819262000238565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000fb565b634e487b7160e01b600052604160045260246000fd5b015190503880620000cc565b90889350601f19831691876000528a6000209260005b8c828210620002fa5750508411620002e1575b505050811b018355620000de565b015160001983881b60f8161c19169055388080620002d3565b8385015186558c97909501949384019301620002c0565b90915085600052886000208580850160051c8201928b86106200035d575b918a91869594930160051c01915b8281106200034d575050620000b5565b600081558594508a91016200033d565b925081926200032f565b634e487b7160e01b600052602260045260246000fd5b93607f16936200009e565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200028857604052565b919080601f84011215620003885782516001600160401b0381116200028857602090620003e9601f8201601f191683016200038d565b92818452828287010111620003885760005b8181106200041157508260009394955001015290565b8581018301518482018401528201620003fb56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde03146106e857508063095ea7b3146106be57806318160ddd1461069f57806323b872dd146105d5578063313ce567146105b0578063395093511461056057806340c10f191461049a57806370a0823114610463578063715018a6146104065780638da5cb5b146103dd57806395d89b41146102bb578063a457c2d714610214578063a9059cbb146101e3578063dd62ed3e146101965763f2fde38b146100c857600080fd5b34610192576020366003190112610192576100e1610828565b906100ea610aec565b6001600160a01b03918216928315610140575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101df57806003193601126101df57806020926101b4610828565b6101bc610843565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5050346101df57806003193601126101df5760209061020d610203610828565b602435903361097e565b5160018152f35b5082346102b857826003193601126102b85761022e610828565b918360243592338152600160205281812060018060a01b03861682526020522054908282106102675760208561020d858503873361087c565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b509190346101df57816003193601126101df5780519082845460018160011c90600183169283156103d3575b60209384841081146103c0578388529081156103a4575060011461034f575b505050829003601f01601f191682019267ffffffffffffffff84118385101761033c57508291826103389252826107df565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106103905750505050830101388080610306565b80548886018301529301928490820161037a565b60ff1916878501525050151560051b8401019050388080610306565b634e487b7160e01b895260228a52602489fd5b91607f16916102e7565b5050346101df57816003193601126101df5760055490516001600160a01b039091168152602090f35b83346102b857806003193601126102b85761041f610aec565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101df5760203660031901126101df5760209181906001600160a01b0361048b610828565b16815280845220549051908152f35b5090346101925780600319360112610192576104b4610828565b90602435916104c1610aec565b6001600160a01b031692831561051e57506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926105048795600254610859565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b5050346101df57806003193601126101df5761020d6020926105a9610583610828565b338352600186528483206001600160a01b03821684528652918490205460243590610859565b903361087c565b5050346101df57816003193601126101df5760209060ff60055460a01c169051908152f35b508290346101df5760603660031901126101df576105f1610828565b6105f9610843565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610633575b60208661020d87878761097e565b84821061065c57509183916106516020969561020d9503338361087c565b919394819350610625565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346101df57816003193601126101df576020906002549051908152f35b5050346101df57806003193601126101df5760209061020d6106de610828565b602435903361087c565b84915083346101925782600319360112610192578260035460018160011c90600183169283156107d5575b60209384841081146103c0578388529081156107b9575060011461076357505050829003601f01601f191682019267ffffffffffffffff84118385101761033c57508291826103389252826107df565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107a55750505050830101858080610306565b80548886018301529301928490820161078f565b60ff1916878501525050151560051b8401019050858080610306565b91607f1691610713565b6020808252825181830181905290939260005b82811061081457505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016107f2565b600435906001600160a01b038216820361083e57565b600080fd5b602435906001600160a01b038216820361083e57565b9190820180921161086657565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561092d57169182156108dd5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b03908116918215610a995716918215610a48576000828152806020526040812054918083106109f457604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6005546001600160a01b03163303610b0057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212209c6a69822ea670b45e402377f28f5700eeed78e129101ecb05365af2fd9f0a3564736f6c63430008180033";

type MockERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20__factory extends ContractFactory {
  constructor(...args: MockERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, decimals_, overrides || {}) as Promise<
      MockERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC20__factory {
    return super.connect(runner) as MockERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20Interface {
    return new Interface(_abi) as MockERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC20 {
    return new Contract(address, _abi, runner) as unknown as MockERC20;
  }
}
