/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { MockzUSD, MockzUSDInterface } from "../../../src/tokens/MockzUSD";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610160604081815234620004685762000018826200046d565b60088252602091828101671b5bd8dade9554d160c21b9283825280519362000040856200046d565b600885528585015280519462000056866200046d565b60058652641b5e9554d160da1b8187015281519162000075836200046d565b6001808452603160f81b83850190815287516001600160401b03989192919089811162000368576003908154928484811c941680156200045d575b8885101462000447578190601f94858111620003f1575b5088908583116001146200038a576000926200037e575b505060001982841b1c191690841b1781555b8a51918a8311620003685760049b8c548581811c911680156200035d575b898210146200034857828111620002fd575b5087918411600114620002925793839491849260009562000286575b50501b92600019911b1c19161788555b620001578662000489565b9461012095865262000169856200064d565b96610140978852519020938460e05251902096610100978089524660a0528251938401947f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f86528385015260608401524660808401523060a084015260a0835260c0830196838810908811176200027157508590525190206080523060c05260098054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a361139c938462000806853960805184610eaf015260a05184610f7b015260c05184610e79015260e05184610efe01525183610f24015251826105cf015251816105f90152f35b604190634e487b7160e01b6000525260246000fd5b0151935038806200013c565b9190601f198416928d60005284896000209460005b8b89838310620002e55750505010620002ca575b50505050811b0188556200014c565b01519060f884600019921b161c1916905538808080620002bb565b868601518955909701969485019488935001620002a7565b8d600052886000208380870160051c8201928b88106200033e575b0160051c019086905b8281106200033157505062000120565b6000815501869062000321565b9250819262000318565b60228e634e487b7160e01b6000525260246000fd5b90607f16906200010e565b634e487b7160e01b600052604160045260246000fd5b015190503880620000de565b90869350601f19831691856000528a6000209260005b8c828210620003da5750508411620003c1575b505050811b018155620000f0565b015160001983861b60f8161c19169055388080620003b3565b8385015186558a97909501949384019301620003a0565b90915083600052886000208580850160051c8201928b86106200043d575b918891869594930160051c01915b8281106200042d575050620000c7565b600081558594508891016200041d565b925081926200040f565b634e487b7160e01b600052602260045260246000fd5b93607f1693620000b0565b600080fd5b604081019081106001600160401b038211176200036857604052565b8051602091908281101562000528575090601f825111620004c75780825192015190808310620004b857501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b8285106200050e575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620004ea565b6001600160401b03811162000368576005928354926001938481811c9116801562000642575b838210146200044757601f81116200060b575b5081601f8411600114620005a1575092829391839260009462000595575b50501b916000199060031b1c191617905560ff90565b0151925038806200057f565b919083601f1981168760005284600020946000905b88838310620005f05750505010620005d6575b505050811b01905560ff90565b015160001960f88460031b161c19169055388080620005c9565b858701518855909601959485019487935090810190620005b6565b8560005284601f846000209201871c820191601f8601881c015b8281106200063557505062000561565b6000815501859062000625565b90607f16906200054e565b805160209081811015620006db5750601f8251116200067a5780825192015190808310620004b857501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620006c1575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506200069d565b906001600160401b0382116200036857600654926001938481811c91168015620007fa575b838210146200044757601f8111620007c0575b5081601f841160011462000754575092829391839260009462000748575b50501b916000199060031b1c19161760065560ff90565b01519250388062000731565b919083601f198116600660005284600020946000905b88838310620007a557505050106200078b575b505050811b0160065560ff90565b015160001960f88460031b161c191690553880806200077d565b8587015188559096019594850194879350908101906200076a565b600660005284601f84600020920160051c820191601f860160051c015b828110620007ed57505062000713565b60008155018590620007dd565b90607f16906200070056fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde0314610a0c57508063095ea7b3146109e257806318160ddd146109c357806323b872dd146108f9578063313ce567146108dd5780633644e515146108b9578063395093511461086957806340c10f19146107a357806370a082311461076c578063715018a61461070f5780637ecebe00146106d757806384b0196e146105b85780638da5cb5b1461058f57806395d89b41146104a0578063a457c2d7146103f9578063a9059cbb146103c8578063d505accf1461020f578063dd62ed3e146101c25763f2fde38b146100f457600080fd5b346101be5760203660031901126101be5761010d610b24565b90610116610fa1565b6001600160a01b0391821692831561016c575050600954826bffffffffffffffffffffffff60a01b821617600955167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461020b578060031936011261020b57806020926101e0610b24565b6101e8610b3f565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b5082903461020b5760e036600319011261020b5761022b610b24565b610233610b3f565b906044359260643560843560ff811681036103c4578142116103815760018060a01b0390818516928389526007602052898920908154916001830190558a519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868d840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff82111761036e578b525190206103169161030e916102e8610e76565b908c519161190160f01b83526002830152602282015260c43591604260a43592206111bd565b91909161124c565b160361032b5750610328939450610c06565b80f35b606490602087519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b875162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b50503461020b578060031936011261020b576020906103f26103e8610b24565b6024359033610d08565b5160018152f35b50823461049d578260031936011261049d57610413610b24565b918360243592338152600160205281812060018060a01b038616825260205220549082821061044c576020856103f28585038733610c06565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b5090346101be57826003193601126101be5780518381949084546104c381610b55565b918285526020966001928860018216918260001461056557505060011461050a575b8588610506896104f7848a0385610bc1565b51928284938452830190610ae4565b0390f35b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061054d57505050820101816104f7610506386104e5565b8054848a018601528895508794909301928101610533565b60ff19168882015294151560051b870190940194508593506104f7925061050691503890506104e5565b50503461020b578160031936011261020b5760095490516001600160a01b039091168152602090f35b5090346101be57826003193601126101be576105f37f0000000000000000000000000000000000000000000000000000000000000000610ff9565b9261061d7f00000000000000000000000000000000000000000000000000000000000000006110fd565b90825192602092602085019585871067ffffffffffffffff8811176106c4575092602061067a83889661066d998b9996528686528151998a99600f60f81b8b5260e0868c015260e08b0190610ae4565b91898303908a0152610ae4565b924660608801523060808801528460a088015286840360c088015251928381520193925b8281106106ad57505050500390f35b83518552869550938101939281019260010161069e565b634e487b7160e01b845260419052602483fd5b50503461020b57602036600319011261020b5760209181906001600160a01b036106ff610b24565b1681526007845220549051908152f35b833461049d578060031936011261049d57610728610fa1565b600980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020b57602036600319011261020b5760209181906001600160a01b03610794610b24565b16815280845220549051908152f35b5090346101be57806003193601126101be576107bd610b24565b90602435916107ca610fa1565b6001600160a01b031692831561082757506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9261080d8795600254610be3565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b50503461020b578060031936011261020b576103f26020926108b261088c610b24565b338352600186528483206001600160a01b03821684528652918490205460243590610be3565b9033610c06565b50503461020b578160031936011261020b576020906108d6610e76565b9051908152f35b50503461020b578160031936011261020b576020905160068152f35b5082903461020b57606036600319011261020b57610915610b24565b61091d610b3f565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610957575b6020866103f2878787610d08565b8482106109805750918391610975602096956103f295033383610c06565b919394819350610949565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461020b578160031936011261020b576020906002549051908152f35b50503461020b578060031936011261020b576020906103f2610a02610b24565b6024359033610c06565b84843461020b578160031936011261020b578282600354610a2c81610b55565b9081845260209560019187600182169182600014610abd575050600114610a61575b50505061050692916104f7910385610bc1565b9190869350600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610aa557505050820101816104f7610506610a4e565b8054848a018601528895508794909301928101610a8c565b60ff19168782015293151560051b860190930193508492506104f791506105069050610a4e565b919082519283825260005b848110610b10575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610aef565b600435906001600160a01b0382168203610b3a57565b600080fd5b602435906001600160a01b0382168203610b3a57565b90600182811c92168015610b85575b6020831014610b6f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610b64565b6040810190811067ffffffffffffffff821117610bab57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610bab57604052565b91908201809211610bf057565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610cb75716918215610c675760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b03908116918215610e235716918215610dd257600082815280602052604081205491808310610d7e57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610f78575b15610ed1577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610bab5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610ea8565b6009546001600160a01b03163303610fb557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff81146110375760ff811690601f8211611025576040519161101b83610b8f565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b5060405160055481600061104a83610b55565b808352926020906001908181169081156110d95750600114611078575b505061107592500382610bc1565b90565b91509260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000925b8284106110c157506110759450505081016020013880611067565b855487850183015294850194869450928101926110a6565b9150506020925061107594915060ff191682840152151560051b8201013880611067565b60ff811461111f5760ff811690601f8211611025576040519161101b83610b8f565b5060405160065481600061113283610b55565b808352926020906001908181169081156110d9575060011461115c57505061107592500382610bc1565b91509260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000925b8284106111a557506110759450505081016020013880611067565b8554878501830152948501948694509281019261118a565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116112405791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156112335781516001600160a01b0381161561122d579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b6005811015611350578061125d5750565b600181036112aa5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036112f75760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461130057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a8c7a5a1bf064d79b4b4eebefd62fb258725fee9f1d54f271eebcc003045cd8064736f6c63430008180033";

type MockzUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockzUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockzUSD__factory extends ContractFactory {
  constructor(...args: MockzUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockzUSD & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockzUSD__factory {
    return super.connect(runner) as MockzUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockzUSDInterface {
    return new Interface(_abi) as MockzUSDInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockzUSD {
    return new Contract(address, _abi, runner) as unknown as MockzUSD;
  }
}
