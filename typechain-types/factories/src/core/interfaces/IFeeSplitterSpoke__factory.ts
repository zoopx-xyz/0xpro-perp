/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFeeSplitterSpoke,
  IFeeSplitterSpokeInterface,
} from "../../../../src/core/interfaces/IFeeSplitterSpoke";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeZ",
        type: "uint256",
      },
    ],
    name: "splitFees",
    outputs: [
      {
        internalType: "uint256",
        name: "toTreasury",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toInsurance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toReferral",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFeeSplitterSpoke__factory {
  static readonly abi = _abi;
  static createInterface(): IFeeSplitterSpokeInterface {
    return new Interface(_abi) as IFeeSplitterSpokeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFeeSplitterSpoke {
    return new Contract(address, _abi, runner) as unknown as IFeeSplitterSpoke;
  }
}
