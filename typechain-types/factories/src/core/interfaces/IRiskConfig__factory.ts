/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRiskConfig,
  IRiskConfigInterface,
} from "../../../../src/core/interfaces/IRiskConfig";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "getIMRBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "getLiqPenaltyBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "getMMRBps",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "getMarketRisk",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "imrBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "mmrBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "liqPenaltyBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "makerFeeBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "takerFeeBps",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "maxLev",
            type: "uint8",
          },
        ],
        internalType: "struct IRiskConfig.MarketRisk",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sizeRaw",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "assetDecimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "priceX1e18",
        type: "uint256",
      },
    ],
    name: "requiredInitialMarginZ",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "risks",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRiskConfig__factory {
  static readonly abi = _abi;
  static createInterface(): IRiskConfigInterface {
    return new Interface(_abi) as IRiskConfigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IRiskConfig {
    return new Contract(address, _abi, runner) as unknown as IRiskConfig;
  }
}
