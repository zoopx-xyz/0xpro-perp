/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFundingModule,
  IFundingModuleInterface,
} from "../../../../src/core/interfaces/IFundingModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "getFundingIndex",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        internalType: "int128",
        name: "indexDelta",
        type: "int128",
      },
    ],
    name: "updateFundingIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFundingModule__factory {
  static readonly abi = _abi;
  static createInterface(): IFundingModuleInterface {
    return new Interface(_abi) as IFundingModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFundingModule {
    return new Contract(address, _abi, runner) as unknown as IFundingModule;
  }
}
