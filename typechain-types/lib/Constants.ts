/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../common";

export interface ConstantsInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "DEFAULT_ADMIN"
      | "DEFAULT_MAX_STALE"
      | "ENGINE"
      | "ENGINE_ADMIN"
      | "INTERNAL_DECIMALS"
      | "KEEPER"
      | "LTV_NON_STABLE_BPS"
      | "LTV_STABLE_BPS"
      | "MAKER_FEE_BPS_DEFAULT"
      | "PRICE_DECIMALS"
      | "PRICE_KEEPER"
      | "RISK_ADMIN"
      | "TAKER_FEE_BPS_DEFAULT"
      | "TREASURER"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEFAULT_MAX_STALE",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ENGINE", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ENGINE_ADMIN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INTERNAL_DECIMALS",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "KEEPER", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "LTV_NON_STABLE_BPS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "LTV_STABLE_BPS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAKER_FEE_BPS_DEFAULT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRICE_DECIMALS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRICE_KEEPER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "RISK_ADMIN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "TAKER_FEE_BPS_DEFAULT",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "TREASURER", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEFAULT_MAX_STALE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ENGINE", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ENGINE_ADMIN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INTERNAL_DECIMALS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "KEEPER", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "LTV_NON_STABLE_BPS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "LTV_STABLE_BPS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAKER_FEE_BPS_DEFAULT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRICE_DECIMALS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRICE_KEEPER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "RISK_ADMIN", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "TAKER_FEE_BPS_DEFAULT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "TREASURER", data: BytesLike): Result;
}

export interface Constants extends BaseContract {
  connect(runner?: ContractRunner | null): Constants;
  waitForDeployment(): Promise<this>;

  interface: ConstantsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  DEFAULT_ADMIN: TypedContractMethod<[], [string], "view">;

  DEFAULT_MAX_STALE: TypedContractMethod<[], [bigint], "view">;

  ENGINE: TypedContractMethod<[], [string], "view">;

  ENGINE_ADMIN: TypedContractMethod<[], [string], "view">;

  INTERNAL_DECIMALS: TypedContractMethod<[], [bigint], "view">;

  KEEPER: TypedContractMethod<[], [string], "view">;

  LTV_NON_STABLE_BPS: TypedContractMethod<[], [bigint], "view">;

  LTV_STABLE_BPS: TypedContractMethod<[], [bigint], "view">;

  MAKER_FEE_BPS_DEFAULT: TypedContractMethod<[], [bigint], "view">;

  PRICE_DECIMALS: TypedContractMethod<[], [bigint], "view">;

  PRICE_KEEPER: TypedContractMethod<[], [string], "view">;

  RISK_ADMIN: TypedContractMethod<[], [string], "view">;

  TAKER_FEE_BPS_DEFAULT: TypedContractMethod<[], [bigint], "view">;

  TREASURER: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "DEFAULT_ADMIN"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "DEFAULT_MAX_STALE"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "ENGINE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ENGINE_ADMIN"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "INTERNAL_DECIMALS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "KEEPER"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "LTV_NON_STABLE_BPS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "LTV_STABLE_BPS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAKER_FEE_BPS_DEFAULT"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "PRICE_DECIMALS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "PRICE_KEEPER"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "RISK_ADMIN"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "TAKER_FEE_BPS_DEFAULT"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "TREASURER"
  ): TypedContractMethod<[], [string], "view">;

  filters: {};
}
